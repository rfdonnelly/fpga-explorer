{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://example.com/register.schema.json",
  "title": "Registers",
  "description": "A register description.",
  "type": "object",
  "required": [
    "schema",
    "design",
    "root",
    "elements"
  ],
  "properties": {
    "schema": {
      "description": "Contains schema version information",
      "type": "object",
      "required": [
        "version"
      ],
      "properties": {
        "version": {
          "description": "The register.schema.json version the document targets",
          "type": "string"
        }
      }
    },
    "design": {
      "description": "Contains design information",
      "type": "object",
      "required": [
        "name",
        "version"
      ],
      "properties": {
        "name": {
          "description": "The name of the design",
          "type": "string"
        },
        "version": {
          "description": "The design version",
          "type": "string"
        },
        "links": {
          "description": "Relevant links (text/URL pairs) for the design.",
          "type": "object",
          "patternProperties": {
            ".*": {
              "description": "A URI",
              "type": "string",
              "format": "uri-reference"
            }
          }
        }
      }
    },
    "root": {
      "description": "Contains design information",
      "type": "object",
      "required": [
        "children"
      ],
      "properties": {
        "children": {
          "description": "An array of top level element IDs",
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        }
      }
    },
    "elements": {
      "description": "Design elements",
      "type": "object",
      "minProperties": 1,
      "patternProperties": {
        ".*": {
          "description": "A design element",
          "type": "object",
          "required": [
            "id",
            "name",
            "type",
            "addr",
            "offset"
          ],
          "properties": {
            "id": {
              "description": "A unique element ID",
              "type": "string"
            },
            "name": {
              "description": "The name of the element",
              "type": "string"
            },
            "type": {
              "description": "The element type",
              "enum": ["blk", "reg", "mem"]
            },
            "addr": {
              "description": "The address of the element within the design",
              "type": "string",
              "pattern": "^0x[0-9a-fA-F]+$"
            },
            "offset": {
              "description": "The offset of the element relative to its parent",
              "type": "string",
              "pattern": "^0x[0-9a-fA-F]+$"
            },
            "doc": {
              "description": "Element documentation",
              "type": "string"
            }
          },
          "if": {
            "properties": { "type": { "const": "reg" } }
          },
          "then": {
            "required": [
              "fields"
            ],
            "properties": {
              "fields": {
                "description": "An array of child element IDs",
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "nbits",
                    "lsb",
                    "name",
                    "access",
                    "reset"
                  ],
                  "properties": {
                    "nbits": {
                      "description": "Number of bits",
                      "type": "integer",
                      "minimum": 1
                    },
                    "lsb": {
                      "description": "Position of the least significant bit",
                      "type": "integer",
                      "minimum": 0
                    },
                    "name": {
                      "description": "The name of the register field",
                      "type": "string"
                    },
                    "access": {
                      "description": "The software access type of the field",
                      "type": "string"
                    },
                    "reset": {
                      "description": "The reset value of the field",
                      "type": "string",
                      "pattern": "^0x[0-9a-fA-F]+$"
                    },
                    "doc": {
                      "description": "Field documentation",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "else": {
            "required": [
              "children"
            ],
            "properties": {
              "children": {
                "description": "An array of child element IDs",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  }
}
